from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


"""Enhance car listing models with additional fields and relationships

Revision ID: 601a3975faf2
Revises: cd2586440722
Create Date: 2025-06-04 13:23:29.983512

"""
# revision identifiers, used by Alembic.
revision = '601a3975faf2'
down_revision = 'cd2586440722'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('car_listing_history', sa.Column('price_change_percent', sa.Float(), nullable=True, comment='Percentage price change from previous record'))
    op.add_column('car_listing_history', sa.Column('source', sa.String(length=50), nullable=True, comment='Source of this update (scraper, manual, etc.)'))
    op.add_column('car_listing_history', sa.Column('notes', sa.Text(), nullable=True, comment='Additional notes about this change'))
    op.add_column('car_listing_history', sa.Column('metadata', sa.JSON(), nullable=True, comment='Additional metadata in JSON format'))
    op.alter_column('car_listing_history', 'id',
               existing_type=sa.INTEGER(),
               type_=sa.BigInteger(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('car_listing_history', 'listing_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('car_listing_history', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               comment='Price at this point in time',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'mileage',
               existing_type=sa.INTEGER(),
               comment='Mileage at this point in time',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'status',
               existing_type=postgresql.ENUM('ACTIVE', 'SOLD', 'ARCHIVED', name='carstatus'),
               comment='Status at this point in time',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'price_change',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               comment='Price change from previous record',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'days_on_market',
               existing_type=sa.INTEGER(),
               comment='Days on market at this point',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.create_index('idx_history_created_at', 'car_listing_history', ['created_at'], unique=False)
    op.create_index('idx_history_listing_created', 'car_listing_history', ['listing_id', 'created_at'], unique=False)
    op.create_index(op.f('ix_car_listing_history_created_at'), 'car_listing_history', ['created_at'], unique=False)
    op.create_index(op.f('ix_car_listing_history_listing_id'), 'car_listing_history', ['listing_id'], unique=False)
    op.add_column('car_listings', sa.Column('original_price', sa.Numeric(precision=12, scale=2), nullable=True, comment='Original price if discounted'))
    # Add columns as nullable first
    op.add_column('car_listings', sa.Column('is_price_negotiable', sa.Boolean(), nullable=True, comment='If price is negotiable'))
    op.add_column('car_listings', sa.Column('engine_volume', sa.Integer(), nullable=True, comment='Engine volume in CC'))
    op.add_column('car_listings', sa.Column('test_until', sa.DateTime(), nullable=True, comment='Next test date (MOT)'))
    op.add_column('car_listings', sa.Column('city', sa.String(length=100), nullable=True, comment='City where the car is located'))
    op.add_column('car_listings', sa.Column('neighborhood', sa.String(length=100), nullable=True, comment='Neighborhood or district'))
    op.add_column('car_listings', sa.Column('horsepower', sa.Integer(), nullable=True, comment='Engine power in HP'))
    op.add_column('car_listings', sa.Column('doors', sa.Integer(), nullable=True, comment='Number of doors'))
    op.add_column('car_listings', sa.Column('seats', sa.Integer(), nullable=True, comment='Number of seats'))
    op.add_column('car_listings', sa.Column('is_imported', sa.Boolean(), nullable=True, comment='If the car is imported'))
    op.add_column('car_listings', sa.Column('is_accident_free', sa.Boolean(), nullable=True, comment='If the car has no accident history'))
    op.add_column('car_listings', sa.Column('thumbnail_url', sa.String(length=500), nullable=True, comment='URL of the main thumbnail image'))
    op.add_column('car_listings', sa.Column('source_url', sa.String(length=500), nullable=True, comment='Original listing URL'))
    op.add_column('car_listings', sa.Column('source_created_at', sa.DateTime(), nullable=True, comment='When the listing was created at the source'))
    op.add_column('car_listings', sa.Column('source_updated_at', sa.DateTime(), nullable=True, comment='When the listing was last updated at the source'))
    op.add_column('car_listings', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('car_listings', sa.Column('last_seen_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    
    # Set default values for NOT NULL columns
    op.execute("UPDATE car_listings SET is_price_negotiable = FALSE WHERE is_price_negotiable IS NULL")
    op.execute("UPDATE car_listings SET is_imported = FALSE WHERE is_imported IS NULL")
    op.execute("UPDATE car_listings SET is_accident_free = TRUE WHERE is_accident_free IS NULL")
    op.execute("UPDATE car_listings SET created_at = NOW() WHERE created_at IS NULL")
    op.execute("UPDATE car_listings SET last_seen_at = NOW() WHERE last_seen_at IS NULL")
    
    # Now alter columns to be NOT NULL
    op.alter_column('car_listings', 'is_price_negotiable', nullable=False)
    op.alter_column('car_listings', 'is_imported', nullable=False)
    op.alter_column('car_listings', 'is_accident_free', nullable=False)
    op.alter_column('car_listings', 'created_at', nullable=False)
    op.alter_column('car_listings', 'last_seen_at', nullable=False)
    op.add_column('car_listings', sa.Column('metadata', sa.JSON(), nullable=True, comment='Additional metadata in JSON format'))
    op.alter_column('car_listings', 'yad2_id',
               existing_type=sa.VARCHAR(),
               comment='Unique identifier from Yad2',
               existing_nullable=False)
    op.alter_column('car_listings', 'title',
               existing_type=sa.VARCHAR(),
               comment='Listing title',
               existing_nullable=False)
    op.alter_column('car_listings', 'description',
               existing_type=sa.TEXT(),
               comment='Detailed description',
               existing_nullable=True)
    op.alter_column('car_listings', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               comment='Current price in ILS',
               existing_nullable=False)
    op.alter_column('car_listings', 'year',
               existing_type=sa.INTEGER(),
               comment='Manufacturing year',
               existing_nullable=True)
    op.alter_column('car_listings', 'mileage',
               existing_type=sa.INTEGER(),
               comment='Mileage in kilometers',
               existing_nullable=True)
    op.alter_column('car_listings', 'fuel_type',
               existing_type=sa.VARCHAR(),
               comment='Fuel type (e.g., Gasoline, Diesel, Hybrid)',
               existing_nullable=True)
    op.alter_column('car_listings', 'transmission',
               existing_type=sa.VARCHAR(),
               comment='Transmission type (Automatic, Manual)',
               existing_nullable=True)
    op.alter_column('car_listings', 'body_type',
               existing_type=sa.VARCHAR(),
               comment='Body type (Sedan, SUV, Hatchback, etc.)',
               existing_nullable=True)
    op.alter_column('car_listings', 'color',
               existing_type=sa.VARCHAR(),
               comment='Exterior color',
               existing_nullable=True)
    op.create_index('idx_listing_brand_model', 'car_listings', ['brand_id', 'model_id'], unique=False)
    op.create_index('idx_listing_created_at', 'car_listings', ['created_at'], unique=False)
    op.create_index('idx_listing_location', 'car_listings', ['city', 'neighborhood'], unique=False)
    op.create_index('idx_listing_mileage', 'car_listings', ['mileage'], unique=False)
    op.create_index('idx_listing_price', 'car_listings', ['price'], unique=False)
    op.create_index('idx_listing_status', 'car_listings', ['status'], unique=False)
    op.create_index('idx_listing_updated_at', 'car_listings', ['updated_at'], unique=False)
    op.create_index('idx_listing_yad2_id', 'car_listings', ['yad2_id'], unique=True)
    op.create_index('idx_listing_year', 'car_listings', ['year'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_listing_year', table_name='car_listings')
    op.drop_index('idx_listing_yad2_id', table_name='car_listings')
    op.drop_index('idx_listing_updated_at', table_name='car_listings')
    op.drop_index('idx_listing_status', table_name='car_listings')
    op.drop_index('idx_listing_price', table_name='car_listings')
    op.drop_index('idx_listing_mileage', table_name='car_listings')
    op.drop_index('idx_listing_location', table_name='car_listings')
    op.drop_index('idx_listing_created_at', table_name='car_listings')
    op.drop_index('idx_listing_brand_model', table_name='car_listings')
    op.alter_column('car_listings', 'color',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Exterior color',
               existing_nullable=True)
    op.alter_column('car_listings', 'body_type',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Body type (Sedan, SUV, Hatchback, etc.)',
               existing_nullable=True)
    op.alter_column('car_listings', 'transmission',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Transmission type (Automatic, Manual)',
               existing_nullable=True)
    op.alter_column('car_listings', 'fuel_type',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Fuel type (e.g., Gasoline, Diesel, Hybrid)',
               existing_nullable=True)
    op.alter_column('car_listings', 'mileage',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Mileage in kilometers',
               existing_nullable=True)
    op.alter_column('car_listings', 'year',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Manufacturing year',
               existing_nullable=True)
    op.alter_column('car_listings', 'price',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Current price in ILS',
               existing_nullable=False)
    op.alter_column('car_listings', 'description',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Detailed description',
               existing_nullable=True)
    op.alter_column('car_listings', 'title',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Listing title',
               existing_nullable=False)
    op.alter_column('car_listings', 'yad2_id',
               existing_type=sa.VARCHAR(),
               comment=None,
               existing_comment='Unique identifier from Yad2',
               existing_nullable=False)
    op.drop_column('car_listings', 'metadata')
    op.drop_column('car_listings', 'last_seen_at')
    op.drop_column('car_listings', 'created_at')
    op.drop_column('car_listings', 'source_updated_at')
    op.drop_column('car_listings', 'source_created_at')
    op.drop_column('car_listings', 'source_url')
    op.drop_column('car_listings', 'thumbnail_url')
    op.drop_column('car_listings', 'is_accident_free')
    op.drop_column('car_listings', 'is_imported')
    op.drop_column('car_listings', 'seats')
    op.drop_column('car_listings', 'doors')
    op.drop_column('car_listings', 'horsepower')
    op.drop_column('car_listings', 'neighborhood')
    op.drop_column('car_listings', 'city')
    op.drop_column('car_listings', 'test_until')
    op.drop_column('car_listings', 'engine_volume')
    op.drop_column('car_listings', 'is_price_negotiable')
    op.drop_column('car_listings', 'original_price')
    op.drop_index(op.f('ix_car_listing_history_listing_id'), table_name='car_listing_history')
    op.drop_index(op.f('ix_car_listing_history_created_at'), table_name='car_listing_history')
    op.drop_index('idx_history_listing_created', table_name='car_listing_history')
    op.drop_index('idx_history_created_at', table_name='car_listing_history')
    op.alter_column('car_listing_history', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('car_listing_history', 'days_on_market',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Days on market at this point',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'price_change',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Price change from previous record',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'status',
               existing_type=postgresql.ENUM('ACTIVE', 'SOLD', 'ARCHIVED', name='carstatus'),
               comment=None,
               existing_comment='Status at this point in time',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'mileage',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Mileage at this point in time',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'price',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               comment=None,
               existing_comment='Price at this point in time',
               existing_nullable=True)
    op.alter_column('car_listing_history', 'listing_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('car_listing_history', 'id',
               existing_type=sa.BigInteger(),
               type_=sa.INTEGER(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('car_listing_history', 'metadata')
    op.drop_column('car_listing_history', 'notes')
    op.drop_column('car_listing_history', 'source')
    op.drop_column('car_listing_history', 'price_change_percent')
    # ### end Alembic commands ###
